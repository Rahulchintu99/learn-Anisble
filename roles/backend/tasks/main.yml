- name: Configuring hostname
  ansible.builtin.shell: set-hostname {{ component }}

- name: disabling the default nodejs version
  ansible.builtin.shell: dnf module disable nodejs -y
 
- name: installing node js
  ansible.builtin.dnf:
   name: nodejs
   state: present

- name: creating {{ app user }} app user 
  ansible.builtin.user:
    name: "{{ app_user }}"

- name: copy the {{ component }} systemd file
  ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: deleting the old {{ component }} directory
  ansible.builtin.file:
    path: "{{ app_dir }}"
    state: absent

- name: Creating the old {{ component }} directory
  ansible.builtin.file:
    path: "{{ app_dir }}"
    state: directory

- name: download and extracting {{ component }} code
  ansible.builtin.unarchive:
    src: "{{ url }}"
    dest: "{{ app_dir }}"
    remote_src: yes

- name: Installing mysql client
  ansible.builtin.package:
    name: mysql-server
    state: present

- name: installing pre-requisite packages for Injection
  ansible.builtin.pip:
    name:
      - PyMySQL
      - cryptography
  executable: pip3.11

- name: Generation {{ component }} artifacts
  community.general.npm:
    path: "{{ app_dir }}"

- name: Scheme Injection for {{ component }}
  ansible.builtin.mysql_db:
    name: all
    state: import
    target: /app/schema/backend.sql 
    login_host: 172.31.14.45
    login_user: root
    login_password: ExpenseApp@1

- name: Restarting the {{ component }} service
  ansible.builtin.systemd.service:
    name: backend
    state: started
    daemon_reload: true